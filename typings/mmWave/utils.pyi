"""
This type stub file was generated by pyright.
"""

import numpy as np
from dataclasses import dataclass
from typing import Optional

@dataclass
class light_xyzd:
    x_coord: np.ndarray
    y_coord: np.ndarray
    z_coord: np.ndarray
    doppler: np.ndarray
    ...


@dataclass(init=False)
class frame:
    """Frame class for the sensor. Only holds data attributes, similair to a struct
    """
    packet: float
    idxPacket: float
    header: float
    detObj: float
    rp: float
    np: float
    tlv_version: bytes
    tlv_version_uint16: int
    tlv_platform: int
    frameNumber: int
    numDetectedObj: int = ...
    detectedPoints_byteVecIdx: int = ...


def getXYZ_type2(vec: list[int], vecIdx: int, Params: frame, numDetecObj: int, sizeObj: int, raw_bv):
    ...

def processDetectedPoints(bv: list[int], idx: int, dt: frame, raw_bv) -> Optional[light_xyzd]:
    """Processes detected points from a byte vector, unpacks floats as well.
    This is some preset structure that we are breaking down
    """
    ...

def load_cfg_file(filepath: str) -> list[str]:
    """Load a config file to a list of strings

    Args:
        filepath (str): Filepath, relative should be ok

    Returns:
        list[str]: List of lines as str
    """
    ...

